import { z } from 'zod'

// KPI Definition Schema
export const KpiDefinitionSchema = z.object({
  name: z.string(),
  displayName: z.string(),
  description: z.string(),
  department: z.string(),
  category: z.enum(['occupancy', 'revenue', 'guest', 'operational', 'financial', 'hr']),
  formula: z.string(),
  unit: z.string(),
  targetValue: z.number().optional(),
  minValue: z.number().optional(),
  maxValue: z.number().optional(),
  inputs: z.array(z.string()).optional(),
  calculationType: z.enum(['simple', 'aggregated', 'derived', 'ratio']),
  timeGranularity: z.enum(['daily', 'weekly', 'monthly', 'quarterly', 'yearly']),
  isActive: z.boolean().default(true),
})

export type KpiDefinition = z.infer<typeof KpiDefinitionSchema>

// Front Office KPIs
export const frontOfficeKPIs: KpiDefinition[] = [
  {
    name: 'occupancy_rate',
    displayName: 'Occupancy Rate',
    description: 'Percentage of available rooms that are occupied',
    department: 'Front Office',
    category: 'occupancy',
    formula: 'Occupied Rooms / Available Rooms × 100',
    unit: '%',
    targetValue: 85,
    minValue: 0,
    maxValue: 100,
    inputs: ['occupied_rooms', 'available_rooms'],
    calculationType: 'ratio',
    timeGranularity: 'daily',
    isActive: true,
  },
  {
    name: 'average_daily_rate',
    displayName: 'Average Daily Rate (ADR)',
    description: 'Average revenue earned per occupied room per day',
    department: 'Front Office',
    category: 'revenue',
    formula: 'Total Room Revenue / Number of Occupied Rooms',
    unit: 'GHS/room',
    targetValue: 8000,
    minValue: 0,
    inputs: ['room_revenue', 'occupied_rooms'],
    calculationType: 'aggregated',
    timeGranularity: 'daily',
    isActive: true,
  },
  {
    name: 'revpar',
    displayName: 'Revenue per Available Room (RevPAR)',
    description: 'Total room revenue divided by total available rooms',
    department: 'Front Office',
    category: 'revenue',
    formula: 'Total Room Revenue / Total Available Rooms',
    unit: 'GHS/available room',
    targetValue: 7000,
    minValue: 0,
    inputs: ['room_revenue', 'available_rooms'],
    calculationType: 'derived',
    timeGranularity: 'daily',
    isActive: true,
  },
  {
    name: 'rgi',
    displayName: 'Revenue Generation Index (RGI)',
    description: 'Hotel RevPAR compared to market RevPAR',
    department: 'Front Office',
    category: 'revenue',
    formula: 'Hotel RevPAR / Market RevPAR × 100',
    unit: 'index',
    targetValue: 100,
    minValue: 0,
    inputs: ['hotel_revpar', 'market_revpar'],
    calculationType: 'ratio',
    timeGranularity: 'monthly',
    isActive: true,
  },
  {
    name: 'alos',
    displayName: 'Average Length of Stay (ALOS)',
    description: 'Average number of nights guests stay',
    department: 'Front Office',
    category: 'guest',
    formula: 'Total Room Nights / Number of Bookings',
    unit: 'nights',
    targetValue: 2.5,
    minValue: 1,
    inputs: ['room_nights', 'bookings'],
    calculationType: 'aggregated',
    timeGranularity: 'daily',
    isActive: true,
  },
]

// Food & Beverage KPIs
export const foodBeverageKPIs: KpiDefinition[] = [
  {
    name: 'average_check',
    displayName: 'Average Check',
    description: 'Average revenue per guest served',
    department: 'Food & Beverage',
    category: 'revenue',
    formula: 'Total F&B Revenue / Number of Covers',
    unit: 'GHS/guest',
    targetValue: 150,
    minValue: 0,
    inputs: ['f&b_revenue', 'covers'],
    calculationType: 'aggregated',
    timeGranularity: 'daily',
    isActive: true,
  },
  {
    name: 'revpash',
    displayName: 'Revenue per Available Seat Hour (RevPASH)',
    description: 'F&B revenue per available seat hour',
    department: 'Food & Beverage',
    category: 'revenue',
    formula: 'Total F&B Revenue / (Available Seats × Operating Hours)',
    unit: 'GHS/seat-hour',
    targetValue: 25,
    minValue: 0,
    inputs: ['f&b_revenue', 'available_seats', 'operating_hours'],
    calculationType: 'derived',
    timeGranularity: 'daily',
    isActive: true,
  },
  {
    name: 'food_cost_percentage',
    displayName: 'Food Cost %',
    description: 'Food cost as a percentage of food revenue',
    department: 'Food & Beverage',
    category: 'operational',
    formula: 'Food Cost / Food Revenue × 100',
    unit: '%',
    targetValue: 30,
    minValue: 0,
    maxValue: 100,
    inputs: ['food_cost', 'food_revenue'],
    calculationType: 'ratio',
    timeGranularity: 'monthly',
    isActive: true,
  },
  {
    name: 'table_turnover',
    displayName: 'Table Turnover Rate',
    description: 'Number of times tables are turned over per hour',
    department: 'Food & Beverage',
    category: 'operational',
    formula: 'Number of Covers / (Total Seats × Operating Hours)',
    unit: 'turns/hour',
    targetValue: 2.5,
    minValue: 0,
    inputs: ['covers', 'total_seats', 'operating_hours'],
    calculationType: 'derived',
    timeGranularity: 'daily',
    isActive: true,
  },
]

// Housekeeping KPIs
export const housekeepingKPIs: KpiDefinition[] = [
  {
    name: 'rooms_cleaned_per_shift',
    displayName: 'Rooms Cleaned per Shift',
    description: 'Average number of rooms cleaned per housekeeping shift',
    department: 'Housekeeping',
    category: 'operational',
    formula: 'Total Rooms Cleaned / Number of Shifts',
    unit: 'rooms/shift',
    targetValue: 15,
    minValue: 0,
    inputs: ['rooms_cleaned', 'shifts'],
    calculationType: 'aggregated',
    timeGranularity: 'daily',
    isActive: true,
  },
  {
    name: 'average_cleaning_time',
    displayName: 'Average Cleaning Time',
    description: 'Average time to clean a room',
    department: 'Housekeeping',
    category: 'operational',
    formula: 'Total Cleaning Time / Number of Rooms Cleaned',
    unit: 'minutes/room',
    targetValue: 30,
    minValue: 0,
    inputs: ['cleaning_time', 'rooms_cleaned'],
    calculationType: 'aggregated',
    timeGranularity: 'daily',
    isActive: true,
  },
  {
    name: 'inspection_pass_rate',
    displayName: 'Inspection Pass Rate',
    description: 'Percentage of rooms that pass quality inspection',
    department: 'Housekeeping',
    category: 'operational',
    formula: 'Rooms Passed Inspection / Total Rooms Inspected × 100',
    unit: '%',
    targetValue: 95,
    minValue: 0,
    maxValue: 100,
    inputs: ['rooms_passed', 'rooms_inspected'],
    calculationType: 'ratio',
    timeGranularity: 'daily',
    isActive: true,
  },
]

// Finance KPIs
export const financeKPIs: KpiDefinition[] = [
  {
    name: 'gop_margin',
    displayName: 'Gross Operating Profit (GOP) Margin',
    description: 'GOP as a percentage of total revenue',
    department: 'Finance',
    category: 'financial',
    formula: 'GOP / Total Revenue × 100',
    unit: '%',
    targetValue: 35,
    minValue: 0,
    maxValue: 100,
    inputs: ['gop', 'total_revenue'],
    calculationType: 'ratio',
    timeGranularity: 'monthly',
    isActive: true,
  },
  {
    name: 'goppar',
    displayName: 'GOP per Available Room (GOPPAR)',
    description: 'GOP divided by total available rooms',
    department: 'Finance',
    category: 'financial',
    formula: 'GOP / Total Available Rooms',
    unit: 'GHS/available room',
    targetValue: 2500,
    minValue: 0,
    inputs: ['gop', 'available_rooms'],
    calculationType: 'derived',
    timeGranularity: 'monthly',
    isActive: true,
  },
  {
    name: 'trevpar',
    displayName: 'Total Revenue per Available Room (TRevPAR)',
    description: 'Total revenue divided by total available rooms',
    department: 'Finance',
    category: 'financial',
    formula: 'Total Revenue / Total Available Rooms',
    unit: 'GHS/available room',
    targetValue: 8000,
    minValue: 0,
    inputs: ['total_revenue', 'available_rooms'],
    calculationType: 'derived',
    timeGranularity: 'monthly',
    isActive: true,
  },
]

// HR KPIs
export const hrKPIs: KpiDefinition[] = [
  {
    name: 'staff_to_room_ratio',
    displayName: 'Staff-to-Room Ratio',
    description: 'Number of staff per available room',
    department: 'HR',
    category: 'hr',
    formula: 'Total Staff / Total Available Rooms',
    unit: 'staff/room',
    targetValue: 0.8,
    minValue: 0,
    inputs: ['total_staff', 'available_rooms'],
    calculationType: 'ratio',
    timeGranularity: 'monthly',
    isActive: true,
  },
  {
    name: 'employee_turnover_rate',
    displayName: 'Employee Turnover Rate',
    description: 'Percentage of employees who leave within a year',
    department: 'HR',
    category: 'hr',
    formula: 'Employees Who Left / Average Number of Employees × 100',
    unit: '%',
    targetValue: 15,
    minValue: 0,
    maxValue: 100,
    inputs: ['employees_left', 'average_employees'],
    calculationType: 'ratio',
    timeGranularity: 'monthly',
    isActive: true,
  },
  {
    name: 'training_hours_per_fte',
    displayName: 'Training Hours per FTE',
    description: 'Average training hours per full-time equivalent',
    department: 'HR',
    category: 'hr',
    formula: 'Total Training Hours / Number of FTEs',
    unit: 'hours/FTE',
    targetValue: 40,
    minValue: 0,
    inputs: ['training_hours', 'ftes'],
    calculationType: 'aggregated',
    timeGranularity: 'monthly',
    isActive: true,
  },
]

// All KPI definitions
export const allKpiDefinitions: KpiDefinition[] = [
  ...frontOfficeKPIs,
  ...foodBeverageKPIs,
  ...housekeepingKPIs,
  ...financeKPIs,
  ...hrKPIs,
]

// Helper functions
export function getKPIsByDepartment(department: string): KpiDefinition[] {
  return allKpiDefinitions.filter(kpi => kpi.department === department)
}

export function getKPIsByCategory(category: string): KpiDefinition[] {
  return allKpiDefinitions.filter(kpi => kpi.category === category)
}

export function getKPIByName(name: string): KpiDefinition | undefined {
  return allKpiDefinitions.find(kpi => kpi.name === name)
}

export function getActiveKPIs(): KpiDefinition[] {
  return allKpiDefinitions.filter(kpi => kpi.isActive)
}
